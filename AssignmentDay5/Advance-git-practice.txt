Last login: Thu Jul 10 13:29:18 on ttys000
strotjain@Strots-MacBook-Air ~ % mkdir Practice && cd Practice
strotjain@Strots-MacBook-Air Practice % git init
hint: Using 'master' as the name for the initial branch. This default branch name
hint: is subject to change. To configure the initial branch name to use in all
hint: of your new repositories, which will suppress this warning, call:
hint:
hint: 	git config --global init.defaultBranch <name>
hint:
hint: Names commonly chosen instead of 'master' are 'main', 'trunk' and
hint: 'development'. The just-created branch can be renamed via this command:
hint:
hint: 	git branch -m <name>
hint:
hint: Disable this message with "git config set advice.defaultBranchName false"
Initialized empty Git repository in /Users/strotjain/Practice/.git/
strotjain@Strots-MacBook-Air Practice % vim practice.js
strotjain@Strots-MacBook-Air Practice % 
strotjain@Strots-MacBook-Air Practice % 
strotjain@Strots-MacBook-Air Practice % 
strotjain@Strots-MacBook-Air Practice % 
strotjain@Strots-MacBook-Air Practice % cat practice.js
console.log("Hello Testing here 1");
strotjain@Strots-MacBook-Air Practice % git remote add https://github.com/strot-jain/Practice.git
usage: git remote add [<options>] <name> <url>

    -f, --[no-]fetch      fetch the remote branches
    --[no-]tags           import all tags and associated objects when fetching
                          or do not fetch any tag at all (--no-tags)
    -t, --[no-]track <branch>
                          branch(es) to track
    -m, --[no-]master <branch>
                          master branch
    --[no-]mirror[=(push|fetch)]
                          set up remote as a mirror to push to or fetch from

strotjain@Strots-MacBook-Air Practice % git --help
usage: git [-v | --version] [-h | --help] [-C <path>] [-c <name>=<value>]
           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]
           [-p | --paginate | -P | --no-pager] [--no-replace-objects] [--no-lazy-fetch]
           [--no-optional-locks] [--no-advice] [--bare] [--git-dir=<path>]
           [--work-tree=<path>] [--namespace=<name>] [--config-env=<name>=<envvar>]
           <command> [<args>]

These are common Git commands used in various situations:

start a working area (see also: git help tutorial)
   clone      Clone a repository into a new directory
   init       Create an empty Git repository or reinitialize an existing one

work on the current change (see also: git help everyday)
   add        Add file contents to the index
   mv         Move or rename a file, a directory, or a symlink
   restore    Restore working tree files
   rm         Remove files from the working tree and from the index

examine the history and state (see also: git help revisions)
   bisect     Use binary search to find the commit that introduced a bug
   diff       Show changes between commits, commit and working tree, etc
   grep       Print lines matching a pattern
   log        Show commit logs
   show       Show various types of objects
   status     Show the working tree status

grow, mark and tweak your common history
   backfill   Download missing objects in a partial clone
   branch     List, create, or delete branches
   commit     Record changes to the repository
   merge      Join two or more development histories together
   rebase     Reapply commits on top of another base tip
   reset      Reset current HEAD to the specified state
   switch     Switch branches
   tag        Create, list, delete or verify a tag object signed with GPG

collaborate (see also: git help workflows)
   fetch      Download objects and refs from another repository
   pull       Fetch from and integrate with another repository or a local branch
   push       Update remote refs along with associated objects

'git help -a' and 'git help -g' list available subcommands and some
concept guides. See 'git help <command>' or 'git help <concept>'
to read about a specific subcommand or concept.
See 'git help git' for an overview of the system.
strotjain@Strots-MacBook-Air Practice % git --help
usage: git [-v | --version] [-h | --help] [-C <path>] [-c <name>=<value>]
           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]
           [-p | --paginate | -P | --no-pager] [--no-replace-objects] [--no-lazy-fetch]
           [--no-optional-locks] [--no-advice] [--bare] [--git-dir=<path>]
           [--work-tree=<path>] [--namespace=<name>] [--config-env=<name>=<envvar>]
           <command> [<args>]

These are common Git commands used in various situations:

start a working area (see also: git help tutorial)
   clone      Clone a repository into a new directory
   init       Create an empty Git repository or reinitialize an existing one

work on the current change (see also: git help everyday)
   add        Add file contents to the index
   mv         Move or rename a file, a directory, or a symlink
   restore    Restore working tree files
   rm         Remove files from the working tree and from the index

examine the history and state (see also: git help revisions)
   bisect     Use binary search to find the commit that introduced a bug
   diff       Show changes between commits, commit and working tree, etc
   grep       Print lines matching a pattern
   log        Show commit logs
   show       Show various types of objects
   status     Show the working tree status

grow, mark and tweak your common history
   backfill   Download missing objects in a partial clone
   branch     List, create, or delete branches
   commit     Record changes to the repository
   merge      Join two or more development histories together
   rebase     Reapply commits on top of another base tip
   reset      Reset current HEAD to the specified state
   switch     Switch branches
   tag        Create, list, delete or verify a tag object signed with GPG

collaborate (see also: git help workflows)
   fetch      Download objects and refs from another repository
   pull       Fetch from and integrate with another repository or a local branch
   push       Update remote refs along with associated objects

'git help -a' and 'git help -g' list available subcommands and some
concept guides. See 'git help <command>' or 'git help <concept>'
to read about a specific subcommand or concept.
See 'git help git' for an overview of thesssssssssssssssssssssssssssssssssssssssstrotjain@Strots-MacBook-Air Practice % git branch --help
strotjain@Strots-MacBook-Air Practice % git remote add https://github.com/strot-jain/Practice.git
usage: git remote add [<options>] <name> <url>

    -f, --[no-]fetch      fetch the remote branches
    --[no-]tags           import all tags and associated objects when fetching
                          or do not fetch any tag at all (--no-tags)
    -t, --[no-]track <branch>
                          branch(es) to track
    -m, --[no-]master <branch>
                          master branch
    --[no-]mirror[=(push|fetch)]
                          set up remote as a mirror to push to or fetch from

strotjain@Strots-MacBook-Air Practice % git remote add origin https://github.com/strot-jain/Practice.git
strotjain@Strots-MacBook-Air Practice % echo "Hello Strot">strot.txt
strotjain@Strots-MacBook-Air Practice % cat strot.txt
Hello Strot
strotjain@Strots-MacBook-Air Practice % git add .
strotjain@Strots-MacBook-Air Practice % git commit -m "Initial Commit"
[master (root-commit) cdb422a] Initial Commit
 2 files changed, 2 insertions(+)
 create mode 100644 practice.js
 create mode 100644 strot.txt
strotjain@Strots-MacBook-Air Practice % git push origin main
error: src refspec main does not match any
error: failed to push some refs to 'https://github.com/strot-jain/Practice.git'
strotjain@Strots-MacBook-Air Practice % git push origin master
Enumerating objects: 4, done.
Counting objects: 100% (4/4), done.
Delta compression using up to 8 threads
Compressing objects: 100% (2/2), done.
Writing objects: 100% (4/4), 309 bytes | 309.00 KiB/s, done.
Total 4 (delta 0), reused 0 (delta 0), pack-reused 0 (from 0)
To https://github.com/strot-jain/Practice.git
 * [new branch]      master -> master
strotjain@Strots-MacBook-Air Practice % git status 
On branch master
nothing to commit, working tree clean
strotjain@Strots-MacBook-Air Practice % echo "Hello There Changes 1">>strot.txt
strotjain@Strots-MacBook-Air Practice % cat strot.txt
Hello Strot
Hello There Changes 1
strotjain@Strots-MacBook-Air Practice % git status
On branch master
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
	modified:   strot.txt

no changes added to commit (use "git add" and/or "git commit -a")
strotjain@Strots-MacBook-Air Practice % git add strot.txt
strotjain@Strots-MacBook-Air Practice % git status
On branch master
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
	modified:   strot.txt

strotjain@Strots-MacBook-Air Practice % git commit -m "2nd main commit"
[master 34ad20f] 2nd main commit
 1 file changed, 1 insertion(+)
strotjain@Strots-MacBook-Air Practice % git push origin master
Enumerating objects: 5, done.
Counting objects: 100% (5/5), done.
Delta compression using up to 8 threads
Compressing objects: 100% (2/2), done.
Writing objects: 100% (3/3), 309 bytes | 309.00 KiB/s, done.
Total 3 (delta 0), reused 0 (delta 0), pack-reused 0 (from 0)
To https://github.com/strot-jain/Practice.git
   cdb422a..34ad20f  master -> master
strotjain@Strots-MacBook-Air Practice % git branch Alter1
strotjain@Strots-MacBook-Air Practice % git branch
  Alter1
* master
strotjain@Strots-MacBook-Air Practice % git checkout Ater1
error: pathspec 'Ater1' did not match any file(s) known to git
strotjain@Strots-MacBook-Air Practice % git checkout Alter1
Switched to branch 'Alter1'
strotjain@Strots-MacBook-Air Practice % echo "Changes 1 done to Alter branch">>strot.txt
strotjain@Strots-MacBook-Air Practice % cat strot.txt
Hello Strot
Hello There Changes 1
Changes 1 done to Alter branch
strotjain@Strots-MacBook-Air Practice % git add strot.txt
strotjain@Strots-MacBook-Air Practice % git status
On branch Alter1
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
	modified:   strot.txt

strotjain@Strots-MacBook-Air Practice % git commit -m "Alter commit 1"
[Alter1 4cf4b99] Alter commit 1
 1 file changed, 1 insertion(+)
strotjain@Strots-MacBook-Air Practice % git push origin Alter1
Enumerating objects: 5, done.
Counting objects: 100% (5/5), done.
Delta compression using up to 8 threads
Compressing objects: 100% (3/3), done.
Writing objects: 100% (3/3), 331 bytes | 331.00 KiB/s, done.
Total 3 (delta 0), reused 0 (delta 0), pack-reused 0 (from 0)
remote: 
remote: Create a pull request for 'Alter1' on GitHub by visiting:
remote:      https://github.com/strot-jain/Practice/pull/new/Alter1
remote: 
To https://github.com/strot-jain/Practice.git
 * [new branch]      Alter1 -> Alter1
strotjain@Strots-MacBook-Air Practice % git branch
* Alter1
  master
strotjain@Strots-MacBook-Air Practice % git switch master
Switched to branch 'master'
strotjain@Strots-MacBook-Air Practice % cat strot.txt
Hello Strot
Hello There Changes 1
strotjain@Strots-MacBook-Air Practice % git log --oneline
34ad20f (HEAD -> master, origin/master) 2nd main commit
cdb422a Initial Commit
strotjain@Strots-MacBook-Air Practice % git branch 
  Alter1
* master
strotjain@Strots-MacBook-Air Practice % git switch Alter1
Switched to branch 'Alter1'
strotjain@Strots-MacBook-Air Practice % git cherry-pick cdb422a
Auto-merging strot.txt
CONFLICT (add/add): Merge conflict in strot.txt
error: could not apply cdb422a... Initial Commit
hint: After resolving the conflicts, mark them with
hint: "git add/rm <pathspec>", then run
hint: "git cherry-pick --continue".
hint: You can instead skip this commit with "git cherry-pick --skip".
hint: To abort and get back to the state before "git cherry-pick",
hint: run "git cherry-pick --abort".
hint: Disable this message with "git config set advice.mergeConflict false"
strotjain@Strots-MacBook-Air Practice % git add .
strotjain@Strots-MacBook-Air Practice % git cherry-pick --continue
hint: Waiting for your editor to close the file... code --wait: code: command not found
error: there was a problem with the editor 'code --wait'
Please supply the message using either -m or -F option.
strotjain@Strots-MacBook-Air Practice % git cherry-pick --continue -m "Cheery-Pick Commit One"  

error: option `mainline' expects a number greater than zero
strotjain@Strots-MacBook-Air Practice % git commit -m "Cherry-pick Commit One"
[Alter1 1261486] Cherry-pick Commit One
 Date: Thu Jul 10 15:15:46 2025 +0530
 1 file changed, 3 insertions(+)
strotjain@Strots-MacBook-Air Practice % git log  --oneline
1261486 (HEAD -> Alter1) Cherry-pick Commit One
4cf4b99 (origin/Alter1) Alter commit 1
34ad20f (origin/master, master) 2nd main commit
cdb422a Initial Commit
strotjain@Strots-MacBook-Air Practice % git branch
* Alter1
  master
strotjain@Strots-MacBook-Air Practice % git log --online --graph --all
fatal: unrecognized argument: --online
strotjain@Strots-MacBook-Air Practice % git log --oneline --graph --all
* 1261486 (HEAD -> Alter1) Cherry-pick Commit One
* 4cf4b99 (origin/Alter1) Alter commit 1
* 34ad20f (origin/master, master) 2nd main commit
* cdb422a Initial Commit
strotjain@Strots-MacBook-Air Practice % git branch
* Alter1
  master
strotjain@Strots-MacBook-Air Practice % git checkout master
Switched to branch 'master'
strotjain@Strots-MacBook-Air Practice % git log --oneline --graph --all
* 1261486 (Alter1) Cherry-pick Commit One
* 4cf4b99 (origin/Alter1) Alter commit 1
* 34ad20f (HEAD -> master, origin/master) 2nd main commit
* cdb422a Initial Commit
strotjain@Strots-MacBook-Air Practice % cat strot.txt
]Hello Strot
Hello There Changes 1
strotjain@Strots-MacBook-Air Practice % git revert --help
strotjain@Strots-MacBook-Air Practice % git branch main
strotjain@Strots-MacBook-Air Practice % git branch -d main
Deleted branch main (was 34ad20f).
strotjain@Strots-MacBook-Air Practice % git branch -d Alter1
error: the branch 'Alter1' is not fully merged
hint: If you are sure you want to delete it, run 'git branch -D Alter1'
hint: Disable this message with "git config set advice.forceDeleteBranch false"
strotjain@Strots-MacBook-Air Practice % git branch -D Alter1
Deleted branch Alter1 (was 1261486).
strotjain@Strots-MacBook-Air Practice % git branch
* master
strotjain@Strots-MacBook-Air Practice % git log --oneline --graph --all
* 4cf4b99 (origin/Alter1) Alter commit 1
* 34ad20f (HEAD -> master, origin/master) 2nd main commit
* cdb422a Initial Commit
strotjain@Strots-MacBook-Air Practice % git reset --hard 4cf4b99              
HEAD is now at 4cf4b99 Alter commit 1
strotjain@Strots-MacBook-Air Practice % git log    
commit 4cf4b99176193c831ad23dddd456bdfc8327ed54 (HEAD -> master, origin/Alter1)
Author: Strot <Strot.jain@syvora.com>
Date:   Thu Jul 10 15:22:13 2025 +0530

    Alter commit 1

commit 34ad20f9389fa9f7df75cbaee03ed26ac96a76c9 (origin/master)
Author: Strot <Strot.jain@syvora.com>
Date:   Thu Jul 10 15:19:18 2025 +0530

    2nd main commit

commit cdb422ab1c960e2d09d11d53c4dda9a5cb16babd
Author: Strot <Strot.jain@syvora.com>
Date:   Thu Jul 10 15:15:46 2025 +0530

    Initial Commit
strotjain@Strots-MacBook-Air Practice % git push origin main
error: src refspec main does not match any
error: failed to push some refs to 'https://github.com/strot-jain/Practice.git'
strotjain@Strots-MacBook-Air Practice % git branch          
* master
strotjain@Strots-MacBook-Air Practice % git push origin master
Total 0 (delta 0), reused 0 (delta 0), pack-reused 0 (from 0)
To https://github.com/strot-jain/Practice.git
   34ad20f..4cf4b99  master -> master
strotjain@Strots-MacBook-Air Practice % git branch -d Alter1
error: branch 'Alter1' not found
strotjain@Strots-MacBook-Air Practice % git push origin -delete Alter1 
error: did you mean `--delete` (with two dashes)?
strotjain@Strots-MacBook-Air Practice % git push origin --delete Alter1
To https://github.com/strot-jain/Practice.git
 - [deleted]         Alter1
strotjain@Strots-MacBook-Air Practice % git log --oneline
4cf4b99 (HEAD -> master, origin/master) Alter commit 1
34ad20f 2nd main commit
cdb422a Initial Commit
strotjain@Strots-MacBook-Air Practice % git tag Important
strotjain@Strots-MacBook-Air Practice % git tag
Important
strotjain@Strots-MacBook-Air Practice % echo "There is a change for anonated tags">> strot.txt
strotjain@Strots-MacBook-Air Practice % cat strot.txt 
Hello Strot
Hello There Changes 1
Changes 1 done to Alter branch
There is a change for anonated tags
strotjain@Strots-MacBook-Air Practice % git add .
strotjain@Strots-MacBook-Air Practice % git commit -m "Annonated Tags commit "
[master 9513a0f] Annonated Tags commit
 1 file changed, 1 insertion(+)
strotjain@Strots-MacBook-Air Practice % git tag -a Annonated-One -m "This is a dummy tag by strot jain"
strotjain@Strots-MacBook-Air Practice % git tags
git: 'tags' is not a git command. See 'git --help'.

The most similar commands are
	stage
	tag
strotjain@Strots-MacBook-Air Practice % git tag 
Annonated-One
Important
strotjain@Strots-MacBook-Air Practice % git push origin --tag
Enumerating objects: 6, done.
Counting objects: 100% (6/6), done.
Delta compression using up to 8 threads
Compressing objects: 100% (4/4), done.
Writing objects: 100% (4/4), 510 bytes | 510.00 KiB/s, done.
Total 4 (delta 0), reused 0 (delta 0), pack-reused 0 (from 0)
To https://github.com/strot-jain/Practice.git
 * [new tag]         Annonated-One -> Annonated-One
 * [new tag]         Important -> Important
strotjain@Strots-MacBook-Air Practice % git push origin master
Total 0 (delta 0), reused 0 (delta 0), pack-reused 0 (from 0)
To https://github.com/strot-jain/Practice.git
   4cf4b99..9513a0f  master -> master
strotjain@Strots-MacBook-Air Practice % cat strot.txt
Hello Strot
Hello There Changes 1
Changes 1 done to Alter branch
There is a change for anonated tags
strotjain@Strots-MacBook-Air Practice % git branch s1
strotjain@Strots-MacBook-Air Practice % git switch s1
Switched to branch 's1'
strotjain@Strots-MacBook-Air Practice % echo "Hello Bhailog">>strot.txt
strotjain@Strots-MacBook-Air Practice % cat strot.txt
Hello Strot
Hello There Changes 1
Changes 1 done to Alter branch
There is a change for anonated tags
Hello Bhailog
strotjain@Strots-MacBook-Air Practice % git switch master
M	strot.txt
Switched to branch 'master'
strotjain@Strots-MacBook-Air Practice % cat strot.txt 
Hello Strot
Hello There Changes 1
Changes 1 done to Alter branch
There is a change for anonated tags
Hello Bhailog
strotjain@Strots-MacBook-Air Practice % git switch s1
M	strot.txt
Switched to branch 's1'
strotjain@Strots-MacBook-Air Practice % git add .
strotjain@Strots-MacBook-Air Practice % git commit -m "s1 commit"
[s1 84a8bf0] s1 commit
 1 file changed, 1 insertion(+)
strotjain@Strots-MacBook-Air Practice % git master
git: 'master' is not a git command. See 'git --help'.

The most similar command is
	restore
strotjain@Strots-MacBook-Air Practice % git switch master
Switched to branch 'master'
strotjain@Strots-MacBook-Air Practice % cat strot.txt
Hello Strot
Hello There Changes 1
Changes 1 done to Alter branch
There is a change for anonated tags
strotjain@Strots-MacBook-Air Practice % git branch s2
strotjain@Strots-MacBook-Air Practice % git switch s2
Switched to branch 's2'
strotjain@Strots-MacBook-Air Practice % echo "Sab mita diya">strot.txt
strotjain@Strots-MacBook-Air Practice % cat strot.txt
Sab mita diya
strotjain@Strots-MacBook-Air Practice % git switch master
M	strot.txt
Switched to branch 'master'
strotjain@Strots-MacBook-Air Practice % git switch s2    
M	strot.txt
Switched to branch 's2'
strotjain@Strots-MacBook-Air Practice % git add .
strotjain@Strots-MacBook-Air Practice % git commit -m "s2 commit"
[s2 3e83edb] s2 commit
 1 file changed, 1 insertion(+), 4 deletions(-)
strotjain@Strots-MacBook-Air Practice % git switch master
Switched to branch 'master'
strotjain@Strots-MacBook-Air Practice % git switch s1
Switched to branch 's1'
strotjain@Strots-MacBook-Air Practice % git merge s2
Auto-merging strot.txt
CONFLICT (content): Merge conflict in strot.txt
Automatic merge failed; fix conflicts and then commit the result.
strotjain@Strots-MacBook-Air Practice % cat strot.txt
<<<<<<< HEAD
Hello Strot
Hello There Changes 1
Changes 1 done to Alter branch
There is a change for anonated tags
Hello Bhailog
=======
Sab mita diya
>>>>>>> s2
strotjain@Strots-MacBook-Air Practice % vim strot.txt
strotjain@Strots-MacBook-Air Practice % git add .
strotjain@Strots-MacBook-Air Practice % git commit -m "Merged"
[s1 db9b53c] Merged
strotjain@Strots-MacBook-Air Practice % git merged
git: 'merged' is not a git command. See 'git --help'.

The most similar command is
	merge
strotjain@Strots-MacBook-Air Practice % git merge 
fatal: No remote for the current branch.
strotjain@Strots-MacBook-Air Practice % git branch
  master
* s1
  s2
strotjain@Strots-MacBook-Air Practice % cat strot.txt

Hello Strot
Hello There Changes 1
Changes 1 done to Alter branch
There is a change 
Sab mita 
strotjain@Strots-MacBook-Air Practice % git log --oneline --graph
*   db9b53c (HEAD -> s1) Merged
|\  
| * 3e83edb (s2) s2 commit
* | 84a8bf0 s1 commit
|/  
* 9513a0f (tag: Annonated-One, origin/master, master) Annonated Tags commit
* 4cf4b99 (tag: Important) Alter commit 1
* 34ad20f 2nd main commit
* cdb422a Initial Commit
strotjain@Strots-MacBook-Air Practice % git branch --merge
  master
* s1
  s2
strotjain@Strots-MacBook-Air Practice % git branch --no-merge
strotjain@Strots-MacBook-Air Practice % git add .
strotjain@Strots-MacBook-Air Practice % git commit -m  "HI BROTHER"
On branch s1
nothing to commit, working tree clean
strotjain@Strots-MacBook-Air Practice % echo "mznckjash" >> strot.jsx
strotjain@Strots-MacBook-Air Practice % git add .
strotjain@Strots-MacBook-Air Practice % git commit -m "message"
[s1 0f588ea] message
 1 file changed, 1 insertion(+)
 create mode 100644 strot.jsx
strotjain@Strots-MacBook-Air Practice % git log --oneline
0f588ea (HEAD -> s1) message
db9b53c Merged
3e83edb (s2) s2 commit
84a8bf0 s1 commit
9513a0f (tag: Annonated-One, origin/master, master) Annonated Tags commit
4cf4b99 (tag: Important) Alter commit 1
34ad20f 2nd main commit
cdb422a Initial Commit
strotjain@Strots-MacBook-Air Practice % git branch hello 
strotjain@Strots-MacBook-Air Practice % git branch -D hello
Deleted branch hello (was 0f588ea).
strotjain@Strots-MacBook-Air Practice % git checkout -b Hello
Switched to a new branch 'Hello'
strotjain@Strots-MacBook-Air Practice % echo "Sab Hata Do" > strot.txt
strotjain@Strots-MacBook-Air Practice % git add .
strotjain@Strots-MacBook-Air Practice % git commit -m "Hello branch"
[Hello 96eebe8] Hello branch
 1 file changed, 1 insertion(+), 6 deletions(-)
strotjain@Strots-MacBook-Air Practice % git checkout master
Switched to branch 'master'
strotjain@Strots-MacBook-Air Practice % cat strot.txt
Hello Strot
Hello There Changes 1
Changes 1 done to Alter branch
There is a change for anonated tags
strotjain@Strots-MacBook-Air Practice % git 
